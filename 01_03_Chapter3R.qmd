---
title: "Chapter 3"
bibliography: refs.bib
---

# Code Call Outs

# Dehejia and Wahba (Code call-out 3.1)
```{r ,message=FALSE, warning=FALSE}
# Loading necessary libraries
library(MatchIt)
library(ggplot2)
library(cobalt)
library(haven)

# Loading the data (adjust the file path as needed)
data <- read_dta("Datasets/Dehejia_Wahba_1999.dta")

# Fitting a logistic regression model for propensity scores
logit_model <- glm(treat ~ age + education + black + hispanic + married + nodegree + re74 + re75, 
                   family = binomial(), data = data)
data$propensity_score <- predict(logit_model, type = "response")

# Propensity score matching
matchit_model <- matchit(treat ~ age + education + black + hispanic + married + nodegree + re74 + re75, 
                         method = "nearest", data = data, ratio = 5)

# Extracting matched data
matched_data <- match.data(matchit_model)

# Calculating Average Treatment Effect on the Treated (ATT)
ATT <- with(matched_data, mean(re78[treat == 1]) - mean(re78[treat == 0]))
print(paste("Average Treatment Effect on the Treated (ATT):", ATT))

# Histograms of propensity scores
ggplot(data, aes(x = propensity_score, fill = factor(treat))) +
  geom_histogram(position = "identity", alpha = 0.5, bins = 50) +
  scale_fill_manual(values = c("lightblue", "lightcoral")) +
  labs(fill = "Group", x = "Propensity Score", y = "Frequency") +
  theme_minimal()

ggplot(matched_data, aes(x = factor(treat), y = re78)) +
  geom_boxplot() +
  labs(x = "Treatment", y = "Earnings in 1978 (re78)") +
  theme_minimal()

love.plot(matchit_model)

```

# Assessing the Impact of Maternal Smoking on Birth Weight (Code call-out 3.2)
Maternal smoking during pregnancy has been a subject of extensive study due to its potential impact on infant health outcomes, such as birth weight. However, simply comparing the birth weights of infants born to smokers versus non-smokers may not account for confounding factors that influence both the likelihood of smoking and birth outcomes.
```{r ,message=FALSE, warning=FALSE}
# Load necessary libraries
#install.packages("tableone")
#install.packages("pastecs")
library(MatchIt)
library(dplyr)
library(ggplot2)
library(pastecs)
library(tableone)
library(cobalt)

# Read the dataset
birth_weight <- read.csv("Datasets/Birth_Weight.csv")

"
The original dataset included nearly 500,000 births. 
This dataset is a subset of 4,642 births that includes information about infant/mother/father characteristics from singleton births in Pennsylvania between 1989 and 1991. 
"

# Recode variables
birth_weight <- birth_weight %>% dplyr::mutate(
  mmarried = as.integer(mmarried == "Married"), # 1 if Married, 0 otherwise
  fbaby = as.integer(fbaby == "Yes"),           # 1 if Yes, 0 otherwise
  mbsmoke = as.integer(mbsmoke == "Smoker")     # 1 if Smoker, 0 otherwise
)

# Perform OLS regression
ols_model <- lm(bweight ~ mbsmoke + mmarried + mage + medu + fbaby, data = birth_weight)
summary(ols_model)


# Estimate propensity scores using logistic regression
ps_model <- glm(mbsmoke ~ mmarried + mage + medu + fbaby, family = binomial(), data = birth_weight)
birth_weight$pscore <- predict(ps_model, type = "response")

# Diagnose the overlap in propensity scores
ggplot(birth_weight, aes(x = pscore, fill = as.factor(mbsmoke))) +
  geom_density(alpha = 0.5) +
  labs(fill = "Mother Smoked", x = "Propensity Score", y = "Density")


# Perform nearest neighbor matching
match_nearest <- matchit(mbsmoke ~ mmarried + mage + medu + fbaby, method = "nearest", data = birth_weight)

# Assess covariate balance before and after matching
bal.tab(match_nearest, un = TRUE)  # Before matching
bal.tab(match_nearest, un = FALSE) # After matching


# Estimate the ATT using the matched sample
matched_data <- match.data(match_nearest)
t.test(bweight ~ mbsmoke, data = matched_data)


# Density plot for propensity score overlap
ggplot(birth_weight, aes(x = pscore, fill = as.factor(mbsmoke))) +
  geom_density(alpha = 0.5) +
  labs(fill = "Mother Smoked", x = "Propensity Score", y = "Density")

# Covariate balance plot
love.plot(match_nearest)

# Boxplot for birth weight distribution comparison
ggplot(matched_data, aes(x = as.factor(mbsmoke), y = bweight)) +
  geom_boxplot() +
  labs(x = "Mother Smoked", y = "Birth Weight") +
  theme_minimal()

# OLS Estimation on the Full Dataset
ols_full <- lm(bweight ~ mbsmoke + mmarried + mage + medu + fbaby, data = birth_weight)
summary(ols_full)

# OLS Estimation on the Dataset after PSM
matched_data <- match.data(match_nearest)
ols_matched <- lm(bweight ~ mbsmoke + mmarried + mage + medu + fbaby, data = matched_data)
summary(ols_matched)

# Comparison of Results
# We can look at the coefficients and their significance in both models
print("OLS Results on the Full Dataset:")
print(summary(ols_full)$coefficients)

print("OLS Results on the Matched Dataset:")
print(summary(ols_matched)$coefficients)


# Analysis of OLS Results - Full Dataset vs Matched Dataset

# Consistency in the Effect of Maternal Smoking:
# Both the full dataset OLS model and the matched dataset OLS model consistently show a significant reduction in birth weight associated with maternal smoking. 
# The coefficients (-224.42 in the full dataset and -227.91 in the matched dataset) suggest a robust negative effect of maternal smoking on birth weight.
# This finding across both models reinforces the evidence of a negative impact of smoking during pregnancy on infant birth weight.

# Differences in Other Factors:
# There are notable differences in the results for other factors (especially maternal age 'mage', maternal education 'medu', and previous baby 'fbaby') between the full dataset and the matched dataset models.
# In the matched dataset, the effects of maternal age, education, and having a previous baby are not statistically significant, which contrasts with the findings from the full dataset.
# This suggests that the propensity score matching process has achieved a better balance of these covariables between the treated and untreated groups, potentially reducing confounding bias.
# Specifically, the reduction in significance of factors like maternal age and education in the matched dataset indicates that the matching might have controlled for these variables more effectively, highlighting the importance of considering matching techniques in observational studies to understand causal relationships.



```

# Dehejia and Wahba - IPW (Code call-out 3.3)
```{r ,message=FALSE, warning=FALSE}
# Load necessary libraries
library(MatchIt)
library(survey)
library(haven)

# Load the data
data <- read_dta("Datasets/Dehejia_Wahba.dta")

# Define covariates and treatment variable
covariates <- c('age', 'education', 'black', 'hispanic', 'married', 'nodegree', 're74', 're75')
treatment <- 'treat'
outcome <- 're78'

# Estimate Propensity Scores for IPTW
logit_model <- glm(treat ~ age + education + black + hispanic + married + nodegree + re74 + re75, 
                   family = binomial(), data = data)
ps <- predict(logit_model, type = "response")

# Calculate weights for IPTW
weights <- ifelse(data$treat == 1, 1 / ps, 1 / (1 - ps))
svy_design <- svydesign(ids = ~1, data = data, weights = ~weights)

# ATE using IPTW
ate_iptw <- svyglm(re78 ~ treat, design = svy_design)

# ATT using IPTW
att_weights <- ifelse(data$treat == 1, 1, ps / (1 - ps))
svy_design_att <- svydesign(ids = ~1, data = data, weights = ~att_weights)
att_iptw <- svyglm(re78 ~ treat, design = svy_design_att)
cat("ATT by IPTW:", coef(att_iptw)["treat"], "\n")

##############################################################
# PROPENSITY SCORE MATCHING
library(haven)
library(MASS)  # For the `ginv` function (generalized inverse)
library(dplyr)

# Load the data
data <- read_dta("C:/Users/maria/Desktop/RA Microeconometría/Propensity Score Matching/Dehejia_Wahba.dta")

# Define covariates and treatment variable
covariates <- c('age', 'education', 'black', 'hispanic', 'married', 'nodegree', 're74', 're75')
treatment <- 'treat'
outcome <- 're78'

# Estimate Propensity Scores using logistic regression
formula <- as.formula(paste(treatment, "~", paste(covariates, collapse = "+")))
logit_model <- glm(formula, family = binomial(), data = data)
data$pscore <- predict(logit_model, type = "response")

# Separate treated and control groups
treated <- data %>% filter(treat == 1)
control <- data %>% filter(treat == 0)

# Function to find the nearest neighbor
nearest_neighbor <- function(treated_pscore, control_pscores) {
  distances <- abs(control_pscores - treated_pscore)
  min_index <- which.min(distances)
  return(min_index)
}

# Perform matching
matched_control_indices <- sapply(treated$pscore, nearest_neighbor, control$pscore)
matched_control <- control[matched_control_indices, ]
matched_control$matched <- TRUE
treated$matched <- TRUE
matched_data <- bind_rows(treated, matched_control)

# Check covariate balance after matching
balance_check <- matched_data %>% group_by(treat) %>% summarize(across(all_of(covariates), mean))
print("Covariate balance after matching:")
print(balance_check)

# Calculate ATT using Matching
att_match <- mean(matched_data %>% filter(treat == 1) %>% pull(re78)) - 
  mean(matched_data %>% filter(treat == 0) %>% pull(re78))

cat("ATT by Matching:", att_match, "\n")

########################################
# Regression for ATT and ATE
# Load the data
data <- read_dta("C:/Users/maria/Desktop/RA Microeconometría/Propensity Score Matching/Dehejia_Wahba.dta")

# Define covariates and treatment variable
covariates <- c('age', 'education', 'black', 'hispanic', 'married', 'nodegree', 're74', 're75')
treatment <- 'treat'
outcome <- 're78'

# Perform linear regression to estimate the ATT
formula <- as.formula(paste(outcome, "~", paste(c(treatment, covariates), collapse = "+")))
reg_model <- lm(formula, data = data)

# Extract the coefficient for the treatment variable (ATT)
coef_treatment <- coef(reg_model)[treatment]

cat("ATT by Regression:", coef_treatment, "\n")


```





