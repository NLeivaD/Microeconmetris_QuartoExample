---
title: "Chapter 3"
bibliography: refs.bib
---

# Code Call Outs
```{r, echo=FALSE, message=FALSE, warning=FALSE}
library(Statamarkdown)
```
```{stata}
clear all
set more off

* Load the data
use "Datasets/Dehejia_Wahba_1999.dta", clear
* Variables are 
	*  TREAT 1 if treated (NSW treated) and 0 if not (PSID-1 control)
	*  AGE   in years
	*  EDUC  in years   
	*  BLACK 1 if black
	*  HISP  1 if Hispanic
	*  MARR  1 if married
	*  RE74  Real annual earnings in 1974  (pre-treatment)
	*  RE75  Real annual earnings in 1974  (pre-treatment)
	*  RE78  Real annual earnings in 1974  (post-treatment)
	*  U74   1 if unemployed in 1974
	*  U75   1 if unemployed in 1974

encode data_id, gen(id)
generate nsw=1 if id==2
replace nsw=. if id!=2
generate cps=1 if id==1
replace cps=1 if treat==1
label variable cps "CPS sample"

* Covariates for DW(02) model
generate agesq= age*age
generate agecubed= age*age*age
generate edusq= education*education
generate u74=(re74==0)
generate u75=(re75==0)
generate edure74 = education*re74

* ATET (Average treatment effect on the treated) can be estimated
teffects psmatch (re78) (treat age agesq agecubed edusq edure74 education married nodegree re74 re75 u74 u75 black hispanic, logit) if cps==1, atet gen(pstub)
predict pscore, ps

* Histograms of propensity scores for the treatment and control group
histogram pscore if treat == 1, name(HistTreat, replace) title("Treated")
histogram pscore if treat == 0, name(HistControl, replace) title("Control")
graph combine HistTreat HistControl

* Boxplot of the distribution of earnings in 1978 (re78) for the matched data

graph box re78, over(treat)

```

### Low Birth (Code call-out 3.2)
```{r, echo=FALSE, message=FALSE, warning=FALSE}
library(Statamarkdown)
```

```{stata}
clear all
set more off

* Load the dataset
import delimited "Datasets/Birth_Weight.csv", clear

* Recode variables
gen mmarried_num = 0
replace mmarried_num = 1 if mmarried == "Married"

gen fbaby_num = 0
replace fbaby_num = 1 if fbaby == "Yes"

gen mbsmoke_num = 0
replace mbsmoke_num = 1 if mbsmoke == "Smoker"

* Perform OLS regression
regress bweight mbsmoke_num mmarried_num mage medu fbaby_num
display "OLS Results on the Full Dataset:"
regress bweight mbsmoke_num mmarried_num mage medu fbaby_num

* Estimate Propensity Scores using logistic regression
logit mbsmoke_num mmarried_num mage medu fbaby_num
predict pscore, pr

* Diagnose Propensity Score overlap
twoway (kdensity pscore if mbsmoke_num == 0, color(red)) ///
       (kdensity pscore if mbsmoke_num == 1, color(blue)), ///
       legend(label(1 "Non-Smoker") label(2 "Smoker")) ///
       title("Propensity Score Overlap")
graph export "Propensity_Score_Overlap_Before.png", replace

* Perform nearest neighbor matching using psmatch2
psmatch2 mbsmoke_num (bweight mmarried_num mage medu fbaby_num), neighbor(1) caliper(0.05) common

* Create a variable to indicate matched observations
gen matched = (_weight != .)

* Evaluate covariate balance before and after matching
foreach var in mmarried_num mage medu fbaby_num {
    * Before matching
    summarize `var' if mbsmoke_num == 1, detail
    scalar mean_treated_unmatched = r(mean)
    scalar var_treated_unmatched = r(Var)
    summarize `var' if mbsmoke_num == 0, detail
    scalar mean_control_unmatched = r(mean)
    scalar var_control_unmatched = r(Var)
    scalar sd_pooled_unmatched = sqrt((var_treated_unmatched + var_control_unmatched) / 2)
    scalar smd_unmatched = (mean_treated_unmatched - mean_control_unmatched) / sd_pooled_unmatched
    display "Unmatched SMD for `var': " smd_unmatched

    * After matching
    summarize `var' if mbsmoke_num == 1 & matched, detail
    scalar mean_treated_matched = r(mean)
    scalar var_treated_matched = r(Var)
    summarize `var' if mbsmoke_num == 0 & matched, detail
    scalar mean_control_matched = r(mean)
    scalar var_control_matched = r(Var)
    scalar sd_pooled_matched = sqrt((var_treated_matched + var_control_matched) / 2)
    scalar smd_matched = (mean_treated_matched - mean_control_matched) / sd_pooled_matched
    display "Matched SMD for `var': " smd_matched
}

* Create birth weight distribution graphs
keep if matched
graph box bweight, over(mbsmoke_num)  ///
    title("Birth Weight Distribution by Smoking Status") ///
    ytitle("Birth Weight") ///
    legend(label(1 "Non-Smoker") label(2 "Smoker"))
graph export "Birth_Weight_Distribution.png", replace

* Diagnose Propensity Score overlap (post-matching)
twoway (kdensity pscore if mbsmoke_num == 0, color(red)) ///
       (kdensity pscore if mbsmoke_num == 1, color(blue)), ///
       legend(label(1 "Non-Smoker") label(2 "Smoker")) ///
       title("Propensity Score Overlap (Post-Matching)")
graph export "Propensity_Score_Overlap_After.png", replace

```
### IPW (Code call-out 3.3)
```{r, echo=FALSE, message=FALSE, warning=FALSE}
library(Statamarkdown)
```

```{stata}
clear all
set more off
* Load the data
use "Datasets/Dehejia_Wahba.dta", clear

* ATT by Regression

* Define covariates and treatment variable
local covariates age education black hispanic married nodegree re74 re75
local treatment treat
local outcome re78

* Perform linear regression to estimate the ATT
regress `outcome' `treatment' `covariates'

* Display the coefficient for the treatment variable (ATT)
scalar coef_treatment = _b[`treatment']
display "ATT by Regression: " coef_treatment

*******************************************

* ATT by Matching
teffects psmatch (re78) (treat age education black hispanic married nodegree re74 re75), atet 

*******************************************

* ATT by Weighting
teffects ipw (re78) (treat age education black hispanic married nodegree re74 re75, probit), atet



```
